---
import Layout from "../layouts/Layout.astro";
import { getProducts } from "../utils/contentful";
import PlantShop from "../components/PlantShop";

const url = new URL(Astro.request.url);
const categoryParam = url.searchParams.get("category")?.toLowerCase();
const availabilityParam = url.searchParams.get("availability")?.toLowerCase();

let products = await getProducts();
if (categoryParam && categoryParam !== "all") {
  products = products.filter(p => p.category === categoryParam);
}
if (availabilityParam === "available") {
  products = products.filter(p => p.inStock);
}

const categories = ["All", "Ornament", "Print", "Card"];
---

<Layout title="Our Shop">
  <h3 class="md:px-4 py-2 font-extrabold font-Quicksand_B text-lg md:text-xl text-center text-[#eadfcb]">
    OUR SHOP
  </h3>

  <!-- ✅ FILTERS SECTION -->
  <div class="filter-container flex flex-wrap justify-center gap-6 mb-6 p-4 bg-[#4e3d34] rounded-lg">
    <label class="text-[#eadfcb] font-semibold">Filter by:</label>

    <select id="availabilityFilter" class="p-2 border rounded-md bg-[#eadfcb] text-[#4e3d34]">
      <option value="all" selected={availabilityParam === null || availabilityParam === 'all'}>All</option>
      <option value="available" selected={availabilityParam === 'available'}>In Stock Only</option> 
    </select>

    <select id="categoryFilter" class="p-2 border rounded-md bg-[#eadfcb] text-[#4e3d34]">
      {categories.map(category => (
        <option value={category.toLowerCase()} selected={category.toLowerCase() === categoryParam}>{category}</option>
      ))}
    </select>
  </div>

  <!-- PRODUCTS GRID -->
  <div class="products-container" id="productsContainer">
    {products.map(product => (
      <PlantShop 
        key={product.slug}  
        title={typeof product.title === "string" ? product.title : ""}
        img={product.images.length > 0 ? product.images[0] : ""} 
        price={typeof product.price === "number" ? product.price.toFixed(2) : "0.00"}
        inStock={product.inStock}
        category={product.category ? product.category.toLowerCase() : "all"}
        slug={product.slug} 
        hasVariants={Array.isArray(product.variants) && product.variants.length > 0}
      />
    ))}
  </div>
</Layout>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const availabilityFilter = document.getElementById("availabilityFilter");
    const categoryFilter = document.getElementById("categoryFilter");

    function updateURLFilters() {
      const availability = availabilityFilter.value;
      const category = categoryFilter.value;
      const params = new URLSearchParams();

      if (availability !== "all") params.set("availability", availability);
      if (category !== "all") params.set("category", category);

      window.location.search = params.toString();
    }

    availabilityFilter?.addEventListener("change", updateURLFilters);
    categoryFilter?.addEventListener("change", updateURLFilters);
  });
</script>

<script>
  // Initialize cart count on load
  document.addEventListener("DOMContentLoaded", () => {
    const bubble = document.getElementById("cart-bubble");
    const cart = JSON.parse(localStorage.getItem("cart") || "[]");
    if (bubble) bubble.textContent = cart.length.toString();
  });
</script>


<style>
  /* Dark brown background */
  body {
    background-color: #4e3d34 !important;
    max-width: 100vw; /* Prevent overflow */
    overflow-x: hidden;
  }

  /* Ensure filters are positioned correctly */
  .filter-container {
    margin-top: 10rem; /* Pushes filters below navbar */
    margin-bottom: 2rem; /* Adds spacing between filters and products */
  }

  /* Responsive Product Grid */
  .products-container {
    display: grid;
    justify-items: center;
    gap: 1.5rem; /* Increased space between items */
    margin-bottom: 1rem;
    padding-top: 2rem; /* Ensures space between filters and cards */
    grid-template-columns: repeat(auto-fit, minmax(220px, 1fr)); /* ✅ More responsive */
    width: 100%;
  }

  /* Fix product card layout */
  .product-card {
    width: 100%;
    max-width: 250px; /* Ensures consistency */
    flex-basis: 220px; /* Adjusted to ensure proper layout */
    padding: 1rem;
    background-color: #eadfcb;
    border-radius: 8px;
    box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.2);
  }

  /* Prevent unnecessary horizontal scrolling */
  @media (max-width: 480px) {
    .products-container {
      grid-template-columns: repeat(auto-fit, minmax(160px, 1fr));
    }
  }

  @media (min-width: 640px) {
    .products-container {
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    }
  }

  @media (min-width: 1024px) {
    .products-container {
      grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
    }
  }

  @media (min-width: 1280px) {
    .products-container {
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    }
  }
</style>
